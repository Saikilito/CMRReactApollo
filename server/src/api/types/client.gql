type Client {
	_id: ID
	nombre: String!
	apellido: String!
	empresa: String!
	emails: [Email]
	edad: Int!
	tipo: TipoCliente!
	pedidos: [Pedido]!
}

type Pedido {
	producto: String
	precio: Int
}

type Email {
	email: String
}

enum TipoCliente {
	BASICO
	PREMIUM
}

type Query {
	getClient(_id: ID!): Client!
	getAllClients(limite:Int, offset:Int): [Client]!
	totalClients:Int
}

#Inputs Mutation!
input iPedido {
	producto: String
	precio: Int
}

input iEmail{
	email:String
}

input iClient {
	_id:ID
	nombre: String!
	apellido: String!
	empresa: String!
	emails: [iEmail]
	edad: Int!
	tipo: TipoCliente!
	pedidos: [iPedido]
}

type Mutation {
<<<<<<< HEAD
	#Crear
	setClient(input: iClient): Boolean!
	#Update
	updateClient(input:iClient):Boolean!
	#Delete
	deleteClient(_id:ID!):Boolean!
=======
	#Crear un Cliente
	setClient(input: iClient): Boolean!
	#Actualizar un cliente
	updateClient(input: iClient): Boolean!
	#Eliminar un cliente
	deleteClient(_id: ID!):Boolean!
>>>>>>> aaa222272f9eeb1928dcad033fcfc1ee75474a5d
}
