type Client {
	_id: ID
	nombre: String!
	apellido: String!
	empresa: String!
	emails: [Email]
	edad: Int!
	tipo: TipoCliente!,
	sellerID: ID
}

type Email {
	email: String
}

enum TipoCliente {
	BASICO
	PREMIUM
}

type Query {
	getClient(_id: ID!): Client!
	getAllClients(limite:Int, offset:Int, sellerID:ID): [Client]!
	totalClients(sellerID:ID):Int
}

#Inputs Mutation!
input iEmail{
	email:String
}

input iClient {
	_id:ID
	nombre: String!
	apellido: String!
	empresa: String!
	emails: [iEmail]
	edad: Int!
	tipo: TipoCliente!,
	sellerID: ID
}

type Mutation {
	#Registrar un cliente
	setClient(input: iClient!): Boolean!
	#Actualizar un cliente
	updateClient(input:iClient!):Boolean!
	#Eliminar un cliente
	deleteClient(_id:ID!):Boolean!
}
